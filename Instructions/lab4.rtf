{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red14\green14\blue14;\red255\green255\blue255;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c6667\c6667\c6667;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\sa200\partightenfactor0

\f0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 This lab is based on\'a0Chapter 4,\'a0"The Speed of Sound". This is programming challenge 16, page 239 (7ed & 8ed), or\'a0programming challenge 18,\'a0page 241 (9ed).\cb1 \uc0\u8232 \u8232 \cb3 1) Write a program as described, but include a loop so the user can perform as many calculations as desired. Present a menu of options; prompt for: a)ir, w)water, s)teel and q)uit. For ease of use, provide an option to quit gracefully at any time. Accept the first letter of each material as input, then ask for the distance. Display the time it takes for sound to travel that distance (in seconds). Test your loop on multiple options in a single run.\'a0
\b Reject invalid data.
\b0 \'a0From the textbook:\'a0
\i\b "Input validation: Decide how the program should handle an illegal input for the menu choice or a negative value for the distance."
\i0\b0 \'a0If the user enters an invalid option, display an error message and ask again. Do not accept distances less than 0. If the user enters an invalid distance (less than 0) display an error message and ask for the distance again. (max 16 points).\cb1 \uc0\u8232 \u8232 \cb3 2) For processing the different options, use a switch statement instead of if else if else if else. Use the default for invalid input. For the switch statement, see pages 210 -215 (7ed & 8ed), pages 213-220 (9ed). (max 18 points)
\f1\fs20 \

\f0\fs32 3) Make an enumerated type to designate the options. See page 219 (7ed & 8ed), pages 222-223 (9ed). Example: enum material \{air, water, steel\};. This will set air=0; water=1; steel=2, which can be used for options. Or try: enum material \{air='a', water='w', steel='s', quit='q'\}; and use the type defaults as options. (max 20 points)\cb1 \uc0\u8232 \u8232 \cb3 Extra credit: Read material data from a file. Read the table from a file containing the following text:\cb1 \uc0\u8232 \cb3 Medium\'a0 \'a0Speed\cb1 \uc0\u8232 \cb3 Air\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a01100\cb1 \uc0\u8232 \cb3 Water\'a0\'a0\'a0\'a0\'a0 4900\cb1 \uc0\u8232 \cb3 Steel\'a0\'a0\'a0 \'a0\'a016400\cb1 \uc0\u8232 \u8232 \cb3 This file can be created with copy/paste: copy the 4 lines above, and paste them into a new text file called: DDHH_L4_Lastname_In.txt.\'a0
\b Modify DDHH as needed. DDHH is the course DayDayHourHour designator, for example: TT10, MW16, TT17, DL5, etc.
\b0 \'a0To see some working sample code which does almost exactly what you need to read data from a file, see: "Program Samples",\'a0
\b \cf4 \strokec4 Simple FileIO.\'a0
\b0 \cf2 \strokec2 This provides a complete, working FileIO example. If reading from your own data file, submit both the code and the data file. (max 22 points).\cb1 \uc0\u8232 \u8232 \cb3 For a bigger challenge, handle the case where more materials are added to the data file, such as:\cb1 \uc0\u8232 \cb3 Copper\'a0\'a0\'a0 7500\cb1 \uc0\u8232 \cb3 Nylon\'a0\'a0\'a0\'a0 \'a01150\cb1 \uc0\u8232 \cb3 Iron\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a08200\cb1 \uc0\u8232 \u8232 \cb3 Do NOT assume you know the contents of the data file in advance. You may assume that each material begins with a different letter. Do not "hard code" the prompt or the material or the speed in the program code. Instead, read the data from the materials file first. Create a prompt that displays each material like above. You cannot use switch or enum as before, because the option letters are not known in advance. Handle up to 6 materials. This is easier to do with arrays (Chapter 8) but can be done without arrays. (max 24 points).
\f1\fs20 \
}